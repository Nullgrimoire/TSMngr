name: Release Builds

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  actions: read

jobs:
  build:
    name: Build ${{ matrix.ext }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin_name: tsmngr
            ext: Linux
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            bin_name: tsmngr.exe
            ext: Windows
          # Optional: Add macOS support
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   bin_name: tsmngr
          #   ext: macOS

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚡ Cache Cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 🛠️ Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: 🛠 Install MinGW toolchain (only on Linux for Windows build)
        if: runner.os == 'Linux' && matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: 🧪 Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: 📦 Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: 🧹 Clean release folder (Linux/macOS)
        if: runner.os != 'Windows'
        run: rm -rf release

      - name: 🗃️ Prepare release folder (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir release
          cp README.md LICENSE CHANGELOG.md release/
          if [ -f tickets.md ]; then cp tickets.md release/; fi
          cp target/${{ matrix.target }}/release/${{ matrix.bin_name }} release/

      - name: 🧙‍♂️ Zip release files (Linux/macOS)
        if: runner.os != 'Windows'
        run: zip -r TSMngr-${{ github.ref_name }}-${{ matrix.ext }}.zip release

      - name: 🚀 Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: TSMngr-${{ github.ref_name }}-${{ matrix.ext }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
